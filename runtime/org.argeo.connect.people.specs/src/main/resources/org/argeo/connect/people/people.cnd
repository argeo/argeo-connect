<people = 'http://www.argeo.org/ns/people'>

//
// PARENT BASE TYPE
//
[people:base] > nt:unstructured, mix:versionable, mix:created, mix:lastModified, mix:title


//
// ENTITY TYPE: it is the parent of all people CRM business types.
//
// should be a direct child of people:base type.
[people:entity] > people:base
// An implementation dependent UID for each entity
// We remove this technical property from the full text search mechanism
- people:uid (String) m nofulltext
// Maps the FN value of a vCard
// We rather use JCR_TITLE and JCR_DESCRIPTION
// - people:displayName (String) 
// A free text description of the current entity
// - people:description (STRING)
- people:source (URI)
+ people:picture (nt:file) 

//
// PERSON
//
[people:person] > people:entity, people:contactable, people:tagable
- people:useDefaultDisplayName (BOOLEAN) ='true' m a 
- people:firstName (STRING) 
- people:middleName (STRING)
- people:lastName (STRING)
- people:salutation (STRING)
- people:honorificTitle (STRING)
- people:nameSuffix (STRING)
- people:nickname (STRING)
- people:maidenName (STRING)
- people:latinPhoneticSpelling (STRING)
- people:birthDate (DATE) 
// Enable approximative birth date 
- people:birthDateTxt
// Sex component:  A single letter.  M stands for "male", 
// F stands for "female", O stands for "other", N stands for "none or not
// applicable", U stands for "unknown".
// Some free-form text comments might be added after a semicolon separator
- people:gender (STRING)
// Positions in the various organisations this person is attached to
+ people:jobs (nt:unstructured)
//+ people:jobs (nt:unstructured) = nt:unstructured m a

// cache to ease full text search 
- people:cachePCity  (STRING) IGNORE
- people:cachePCountry (STRING) IGNORE
- people:cachePOrg (STRING) IGNORE
- people:cachePPhone (STRING) IGNORE
- people:cachePMail (STRING) IGNORE
- people:cachePWeb (STRING) IGNORE

//
// ORGANISATION
//
[people:org] > people:entity, people:contactable, people:tagable
- people:useDefaultDisplayName (BOOLEAN) ='true' m a 
- people:legalName (STRING)
- people:legalForm (STRING)
- people:vatIdNb (STRING)
// Departments or organisational units
+ * (people:org) *
// tag like multivalued properties to add an organisation to a given branch
- people:orgBranches (STRING) *
// Subnode for all bank accounts owned by this org
+ people:paymentAccounts (nt:unstructured)

// cache to ease full text search 
- people:cachePCity  (STRING) IGNORE
- people:cachePCountry (STRING) IGNORE
- people:cachePPhone (STRING) IGNORE
- people:cachePMail (STRING) IGNORE
- people:cachePWeb (STRING) IGNORE


//
// GROUP : base type for all groups of persons, organisations and/or other groups 
//
[people:group] > people:entity, people:tagable
+ people:members (nt:unstructured) =nt:unstructured m a 

//
// MAILING LIST 
//
[people:mailingList] > people:group


// 
// GROUP MEMBERS
// node with reference to corresponding entities 
// and some more information if needed.

[people:position] > nt:unstructured, people:orderable
- people:role (STRING) 
// OPTIONAL: the nature of the subject in this relation: 
// For instance "Actor" or "Engineer" 
- people:title (STRING) 
- people:dateBegin (DATE)
- people:dateEnd (DATE)
// enable to notify that a position is not relevant anymore in the case 
// we don't know when it has ended 
- people:isCurrent (BOOLEAN) ="true" a m


// An item of a mailing list
// Note that for the time being, we store the corresponding 
// mail address in the people:role property
[people:mailingListItem] > people:position
// an entity that can provide a primary contact (person, org, group...)
- people:refUid (STRING) m nofulltext

// The job or position of a person in an organisation
[people:job] > people:position
// ONLY an organisation
- people:refUid (STRING) m nofulltext
// An optional department within the org corresponding to the current position
- people:department (STRING)

// Membership in a group
[people:member] > people:position
// MIGHT BE a person, an organisation or another group
- people:refUid (STRING) m nofulltext

// 
// TAGABLE
//
[people:tagable] 
mixin
- people:tags (STRING) *

//
// USER MANAGEMENT 
//
[people:profile] > nt:unstructured, mix:versionable, mix:lastModified
- people:relatedPersons (REFERENCE) * // towards people:person types 
- people:userGroups (REFERENCE) *  // towards people:userGroup types 

[people:userGroup] > nt:unstructured, mix:title, mix:versionable, mix:lastModified 
// An almost human readable group ID 
// Should be mandatory, left like that for legacy reasons.
- people:groupId (STRING) 
// only set when creating the default group for a single user 
- people:isSingleUserGroup (BOOLEAN) 

//
// ACTIVITIES AND TASKS
//

// Activities
[people:activity] > people:base
// reference the user that has created this activity. Might be redundant with jcr:createdBy property ?
- people:manager (REFERENCE) m
// reference the relevant date for this activity, generally, the creation date. 
- people:activityDate (DATE)

// a list of related entities like persons, orgs or ...
- people:relatedTo (REFERENCE) * 
// an optional list of related documents
+ people:attachments (nt:unstructured) 
// Enable linking activities together, especially enable referencement of related tasks and workflow.
- people:boundActivities (REFERENCE) *

// Various activity types, we use mixin to be able to later enrich the model
[people:note]
mixin 

[people:sentEmail] 
mixin  

[people:call]
mixin 

[people:meeting]
mixin 

[people:sentPostMail]
mixin 

[people:sentFax]
mixin 

[people:payment]
mixin 

[people:review]
mixin 

[people:chat]
mixin 

[people:tweet]
mixin 

[people:blog]
mixin 

// Tasks 
[people:task] > people:activity
- people:taskStatus (String) // mandatory or not?
// reference to a group
- people:assignedTo (REFERENCE)
// - people:relatedTo (REFERENCE) * 
- people:dueDate (DATE) 
- people:closeDate (DATE) 
- people:wakeUpDate (DATE) 
//various sub nodes
- people:dependsOn (REFERENCE) *
+ people:tasks (nt:unstructured)
+ people:activities (nt:unstructured)

//
// LANGUAGES AND COUNTRIES
//
[people:multiLang]
mixin
// we use nt:unstructured to insure the fact that nodes are orderable
+ * (nt:unstructured, people:language) *

[people:language] 
mixin
// A single language tag, as defined in http://tools.ietf.org/html/rfc5646
- people:lang (STRING) ='en' m a
// NOTE: we don't use mix:language for the time being because constraints on the 
// jcr:language properties are implementation specific


// a reference for a given language
[people:isoLanguage] > nt:unstructured, mix:title
- people:isoCode (STRING) m 

// a reference for a given country
[people:isoCountry] > nt:unstructured, mix:title
- people:isoCode (STRING) m

// 
// ORDERABLE
//
// Connect specific mixin to enable definition of order and primary items 
// when the orderable node mechanism provided by JCR is not enough
[people:orderable] 
mixin
// 1 is the most prefered
- people:pref (LONG) 
- people:isPrimary (BOOLEAN) 




/////// COMMUNICATION

// 
// CONTACTABLE
//
[people:contactable] 
mixin
+ people:contacts (nt:unstructured)
//+ people:contacts (nt:unstructured) =nt:unstructured m a 

// 
// CONTACTS
// 
[people:contact] > nt:unstructured, people:orderable
- people:contactValue (STRING) 
// a shortcut to manage primary contact
// should be refined
// Only for person, Private or professional
- people:contactNature (STRING)
// Category for the given type : for instance a private phone can be:
// Mobile, Home, Fax or other
- people:contactCategory (STRING)
// an optional label 
- people:contactLabel (STRING)
// OPTIONNAL an URI translated from the contact value 
// to be used directly by the system.
- people:contactUri (URI) 

// if contactNature == work - people:refUid (STRING)
// Rather use people:contactRef mixin


// TEL
[people:phone] > people:contact 
// to display current time for this timezone
// Stores time offset to UTC as a parseable String for the time being
- people:timeZone (STRING)

// EMAIL
[people:email] > people:contact 

// IMPP
[people:impp] > people:contact 

// WEBSITE
[people:url] > people:contact 

// Social Media
[people:socialMedia] > people:contact 

// ADDRESS
[people:address] > people:contact 
// Display address SHOULD be stored in the contactValue property
// when updating following properties 
- people:street (STRING)
- people:streetComplement (STRING)
- people:zipCode (STRING)
- people:city (STRING)
- people:state (STRING)
- people:country (STRING)
// An optionnal Geopoint. Should be refined
- people:geoPoint (STRING)


// CONTACT REFERENCE
// this contact will be the primary contact of the given type of the referenced entity if such a contact exists.
// Used among other for persons professional addresses
[people:contactRef]  
mixin
- people:refUid (STRING)



// PARENT PAYMENT ACCOUNT TYPE 
// To enable future storing of alternative payment means (bitcoins or internet payment providers...)
[people:paymentAccount] > people:address, mix:title 
- people:currency (STRING)

// BANK ACCOUNT
[people:bankAccount] > people:paymentAccount 
- people:bankName 
// To be used while passing transaction orders
- people:accountHolder (STRING)
- people:accountNb (STRING)
- people:bankNb (STRING)
- people:iban (STRING)
- people:bic (STRING)